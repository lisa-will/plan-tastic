/*
 * This file/code is part of Paper UI project.
 *
 * Paper UI - is a modern front-end framework based on Material Design by Google
 * https://github.com/virtyaluk/paper-ui
 *
 * Copyright (c) 2015 Bohdan Shtepan
 * http://modern-dev.com/
 *
 * Licensed under the MIT license.
 */
 {"version":3,"sources":["PaperRipple.js"],"names":["System","register","_export","_classCallCheck","instance","Constructor","TypeError","_createClass","ElementRect","_window","_doc","_now","PaperWave","PaperRipple","setters","execute","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","element","this","_element","width","boundingRect","height","size","Math","max","value","_ref","_ref$x","x","undefined","_ref$y","y","euclideanDistance","_ref2","clientX","clientY","l","left","t","top","w","h","_x","_y","get","getBoundingClientRect","point1","point2","sqrt","pow","window","document","performance","now","bind","Date","_ref3","$","_ref3$recenters","recenters","_ref3$center","center","_ref3$initialOpacity","initialOpacity","_ref3$opacityDecayVel","opacityDecayVelocity","color","getComputedStyle","containerRect","$wave","createElement","classList","add","style","backgroundColor","appendChild","resetDefaults","maxRadius","touchDownStarted","touchUpStarted","startPosition","endPosition","cssString","scaleFactor","radius","containerCenter","currentPos","currentPosition","deltaPos","opacity","webkitTransform","mozTransform","msTransform","oTransform","transform","event","arguments","distanceToFarthestCorner","isTouchDown","parentNode","removeChild","elapsed","touchUpElapsed","touchDownElapsed","touchDownElapsedSeconds","touchUpElapsedSeconds","min","MAX_RADIUS","currentTime","mouseInteractionSeconds","actualRadius","abs","isWaveFullyOpaque","isMaxRadiusReached","translateFraction","translationFraction","cfg","_ref4","_ref4$initialOpacity","_ref4$opacityDecayVel","_ref4$recenters","_ref4$center","_ref4$round","round","_ref4$target","_waves","_initTarget","nodeType","$background","querySelector","$waves","wave","push","ev","addWave","downAction","animate","forEach","upAction","waveIndex","indexOf","splice","remove","draw","outerOpacity","removeWave","shouldKeepAnimating","requestAnimationFrame","hasAttribute","set","newValue","contains","toggle","some","isAnimationComplete","module","exports"],"mappings":"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","file":"PaperRipple.js","sourcesContent":["/*\n * This file/code is part of Paper UI project.\n *\n * Paper UI - is a modern front-end framework based on Material Design by Google\n * https://github.com/virtyaluk/paper-ui\n *\n * Copyright (c) 2015 Bohdan Shtepan\n * http://modern-dev.com/\n *\n * Licensed under the MIT license.\n */\n 'use strict';\n\nSystem.register('PaperRipple', [], function (_export) {\n    var _createClass, ElementRect, _window, _doc, _now, PaperWave, PaperRipple;\n\n    function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n        }\n    }\n\n    return {\n        setters: [],\n        execute: function () {\n            _createClass = (function () {\n                function defineProperties(target, props) {\n                    for (var i = 0; i < props.length; i++) {\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n\n                return function (Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            })();\n\n            ElementRect = (function () {\n                function ElementRect(element) {\n                    _classCallCheck(this, ElementRect);\n\n                    this._element = element;\n                    this.width = this.boundingRect.width;\n                    this.height = this.boundingRect.height;\n                    this.size = Math.max(this.width, this.height);\n                    return this;\n                }\n\n                _createClass(ElementRect, [{\n                    key: 'distanceToFarthestCorner',\n                    value: function distanceToFarthestCorner(_ref) {\n                        var _ref$x = _ref.x;\n                        var x = _ref$x === undefined ? 0 : _ref$x;\n                        var _ref$y = _ref.y;\n                        var y = _ref$y === undefined ? 0 : _ref$y;\n                        return Math.max(ElementRect.euclideanDistance({\n                            x: x,\n                            y: y\n                        }, {\n                            x: 0,\n                            y: 0\n                        }), ElementRect.euclideanDistance({\n                            x: x,\n                            y: y\n                        }, {\n                            x: this.width,\n                            y: 0\n                        }), ElementRect.euclideanDistance({\n                            x: x,\n                            y: y\n                        }, {\n                            x: 0,\n                            y: this.height\n                        }), ElementRect.euclideanDistance({\n                            x: x,\n                            y: y\n                        }, {\n                            x: this.width,\n                            y: this.height\n                        }));\n                    }\n                }, {\n                    key: 'contains',\n                    value: function contains(_ref2) {\n                        var x = _ref2.x;\n                        var y = _ref2.y;\n                        var clientX = _ref2.clientX;\n                        var clientY = _ref2.clientY;\n\n                        var l = this.boundingRect.left,\n                            t = this.boundingRect.top,\n                            w = this.boundingRect.width,\n                            h = this.boundingRect.height,\n                            _x = x || clientX || 0,\n                            _y = y || clientY || 0;\n\n                        return _x >= l && _x <= l + w && _y >= t && _y <= t + h;\n                    }\n                }, {\n                    key: 'center',\n                    get: function get() {\n                        return {\n                            x: this.width / 2,\n                            y: this.height / 2\n                        };\n                    }\n                }, {\n                    key: 'boundingRect',\n                    get: function get() {\n                        return this._element.getBoundingClientRect();\n                    }\n                }], [{\n                    key: 'euclideanDistance',\n                    value: function euclideanDistance(point1, point2) {\n                        return Math.sqrt(Math.pow(point1.x - point2.x, 2) + Math.pow(point1.y - point2.y, 2));\n                    }\n                }]);\n\n                return ElementRect;\n            })();\n\n            _window = window || undefined;\n            _doc = _window.document;\n\n            _now = (function () {\n                return _window.performance && _window.performance.now ? _window.performance.now.bind(_window.performance) : Date.now;\n            })();\n\n            PaperWave = (function () {\n                function PaperWave(_ref3) {\n                    var $ = _ref3.$;\n                    var _ref3$recenters = _ref3.recenters;\n                    var recenters = _ref3$recenters === undefined ? false : _ref3$recenters;\n                    var _ref3$center = _ref3.center;\n                    var center = _ref3$center === undefined ? false : _ref3$center;\n                    var _ref3$initialOpacity = _ref3.initialOpacity;\n                    var initialOpacity = _ref3$initialOpacity === undefined ? 0.25 : _ref3$initialOpacity;\n                    var _ref3$opacityDecayVel = _ref3.opacityDecayVelocity;\n                    var opacityDecayVelocity = _ref3$opacityDecayVel === undefined ? 0.8 : _ref3$opacityDecayVel;\n\n                    _classCallCheck(this, PaperWave);\n\n                    this.color = _window.getComputedStyle($).color;\n                    this.containerRect = new ElementRect($);\n                    this.recenters = recenters;\n                    this.center = center;\n                    this.initialOpacity = initialOpacity;\n                    this.opacityDecayVelocity = opacityDecayVelocity;\n                    this.$wave = _doc.createElement('div');\n                    this.$wave.classList.add('paper-ripple__wave');\n                    this.$wave.style.backgroundColor = this.color;\n                    this.$ = _doc.createElement('div');\n                    this.$.classList.add('paper-ripple__wave-container');\n                    this.$.appendChild(this.$wave);\n                    this.resetDefaults();\n                    return this;\n                }\n\n                _createClass(PaperWave, [{\n                    key: 'resetDefaults',\n                    value: function resetDefaults() {\n                        this.maxRadius = 0;\n                        this.touchDownStarted = 0;\n                        this.touchUpStarted = 0;\n                        this.startPosition = {\n                            x: 0,\n                            y: 0\n                        };\n                        this.endPosition = {\n                            x: 0,\n                            y: 0\n                        };\n                        return this;\n                    }\n                }, {\n                    key: 'draw',\n                    value: function draw() {\n                        var cssString = undefined,\n                            scaleFactor = this.radius / (this.containerRect.size / 2),\n                            containerCenter = this.containerRect.center,\n                            currentPos = this.currentPosition,\n                            deltaPos = {\n                            x: currentPos.x - containerCenter.x,\n                            y: currentPos.y - containerCenter.y\n                        };\n                        this.$wave.style.opacity = this.opacity;\n                        cssString = 'translate(' + deltaPos.x + 'px, ' + deltaPos.y + 'px)';\n                        this.$.style.webkitTransform = cssString;\n                        this.$.style.mozTransform = cssString;\n                        this.$.style.msTransform = cssString;\n                        this.$.style.oTransform = cssString;\n                        this.$.style.transform = 'translate3d(' + deltaPos.x + 'px, ' + deltaPos.y + 'px, 0)';\n                        cssString = 'scale(' + scaleFactor + ',' + scaleFactor + ')';\n                        this.$wave.style.webkitTransform = cssString;\n                        this.$wave.style.mozTransform = cssString;\n                        this.$wave.style.msTransform = cssString;\n                        this.$wave.style.oTransform = cssString;\n                        this.$wave.style.transform = 'scale3d(' + scaleFactor + ',' + scaleFactor + ', 1)';\n                        return this;\n                    }\n                }, {\n                    key: 'downAction',\n                    value: function downAction() {\n                        var event = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n                        var containerCenter = this.containerRect.center;\n                        this.resetDefaults();\n                        this.touchDownStarted = _now();\n                        this.startPosition = this.center || !event ? containerCenter : {\n                            x: (event.clientX || event.x) - this.containerRect.boundingRect.left,\n                            y: (event.clientY || event.y) - this.containerRect.boundingRect.top\n                        };\n                        this.endPosition = this.recenters ? containerCenter : this.endPosition;\n                        this.maxRadius = this.containerRect.distanceToFarthestCorner(this.startPosition);\n                        this.$.style.top = (this.containerRect.height - this.containerRect.size) / 2 + 'px';\n                        this.$.style.left = (this.containerRect.width - this.containerRect.size) / 2 + 'px';\n                        this.$.style.width = this.containerRect.size + 'px';\n                        this.$.style.height = this.containerRect.size + 'px';\n                        return this;\n                    }\n                }, {\n                    key: 'upAction',\n                    value: function upAction() {\n                        if (!this.isTouchDown) {\n                            return this;\n                        }\n\n                        this.touchUpStarted = _now();\n                        return this;\n                    }\n                }, {\n                    key: 'remove',\n                    value: function remove() {\n                        this.$.parentNode.removeChild(this.$);\n                        return this;\n                    }\n                }, {\n                    key: 'touchDownElapsed',\n                    get: function get() {\n                        var elapsed;\n\n                        if (!this.touchDownStarted) {\n                            return 0;\n                        }\n\n                        elapsed = _now() - this.touchDownStarted;\n\n                        if (this.touchUpStarted) {\n                            elapsed -= this.touchUpElapsed;\n                        }\n\n                        return elapsed;\n                    }\n                }, {\n                    key: 'touchUpElapsed',\n                    get: function get() {\n                        return this.touchUpStarted ? _now() - this.touchUpStarted : 0;\n                    }\n                }, {\n                    key: 'touchDownElapsedSeconds',\n                    get: function get() {\n                        return this.touchDownElapsed / 1000;\n                    }\n                }, {\n                    key: 'touchUpElapsedSeconds',\n                    get: function get() {\n                        return this.touchUpElapsed / 1000;\n                    }\n                }, {\n                    key: 'mouseInteractionSeconds',\n                    get: function get() {\n                        return this.touchDownElapsedSeconds + this.touchUpElapsedSeconds;\n                    }\n                }, {\n                    key: 'radius',\n                    get: function get() {\n                        var radius = Math.min(Math.sqrt(Math.pow(this.containerRect.width, 2) + Math.pow(this.containerRect.height, 2)), PaperWave.MAX_RADIUS) * 1.1 + 5,\n                            elapsed = 1.1 - 0.2 * (radius / PaperWave.MAX_RADIUS),\n                            currentTime = this.mouseInteractionSeconds / elapsed,\n                            actualRadius = radius * (1 - Math.pow(80, -currentTime));\n                        return Math.abs(actualRadius);\n                    }\n                }, {\n                    key: 'opacity',\n                    get: function get() {\n                        if (!this.touchUpStarted) {\n                            return this.initialOpacity;\n                        }\n\n                        return Math.max(0, this.initialOpacity - this.touchUpElapsedSeconds * this.opacityDecayVelocity);\n                    }\n                }, {\n                    key: 'outerOpacity',\n                    get: function get() {\n                        return Math.max(0, Math.min(this.touchUpElapsedSeconds * 0.3, this.opacity));\n                    }\n                }, {\n                    key: 'isWaveFullyOpaque',\n                    get: function get() {\n                        return this.opacity < 0.01 && this.radius >= Math.min(this.maxRadius, PaperWave.MAX_RADIUS);\n                    }\n                }, {\n                    key: 'isMaxRadiusReached',\n                    get: function get() {\n                        return this.opacity >= this.initialOpacity && this.radius >= Math.min(this.maxRadius, PaperWave.MAX_RADIUS);\n                    }\n                }, {\n                    key: 'isAnimationComplete',\n                    get: function get() {\n                        return this.touchUpStarted ? this.isWaveFullyOpaque : this.isMaxRadiusReached;\n                    }\n                }, {\n                    key: 'translationFraction',\n                    get: function get() {\n                        return Math.min(1, this.radius / this.containerRect.size * 2 / Math.sqrt(2));\n                    }\n                }, {\n                    key: 'currentPosition',\n                    get: function get() {\n                        var translateFraction = this.translationFraction,\n                            x = this.startPosition.x,\n                            y = this.startPosition.y;\n\n                        if (this.endPosition.x) {\n                            x = this.startPosition.x + translateFraction * (this.endPosition.x - this.startPosition.x);\n                        }\n\n                        if (this.endPosition.y) {\n                            y = this.startPosition.y + translateFraction * (this.endPosition.y - this.startPosition.y);\n                        }\n\n                        return {\n                            x: x,\n                            y: y\n                        };\n                    }\n                }, {\n                    key: 'isTouchDown',\n                    get: function get() {\n                        return this.touchDownStarted && !this.touchUpStarted;\n                    }\n                }]);\n\n                return PaperWave;\n            })();\n\n            PaperWave.MAX_RADIUS = 300;\n\n            PaperRipple = (function () {\n                function PaperRipple(cfg) {\n                    _classCallCheck(this, PaperRipple);\n\n                    var _ref4 = cfg || {};\n\n                    var _ref4$initialOpacity = _ref4.initialOpacity;\n                    var initialOpacity = _ref4$initialOpacity === undefined ? 0.25 : _ref4$initialOpacity;\n                    var _ref4$opacityDecayVel = _ref4.opacityDecayVelocity;\n                    var opacityDecayVelocity = _ref4$opacityDecayVel === undefined ? 0.8 : _ref4$opacityDecayVel;\n                    var _ref4$recenters = _ref4.recenters;\n                    var recenters = _ref4$recenters === undefined ? false : _ref4$recenters;\n                    var _ref4$center = _ref4.center;\n                    var center = _ref4$center === undefined ? false : _ref4$center;\n                    var _ref4$round = _ref4.round;\n                    var round = _ref4$round === undefined ? false : _ref4$round;\n                    var _ref4$target = _ref4.target;\n                    var target = _ref4$target === undefined ? null : _ref4$target;\n                    this.initialOpacity = initialOpacity;\n                    this.opacityDecayVelocity = opacityDecayVelocity;\n                    this._waves = [];\n\n                    this._initTarget(cfg && cfg.nodeType ? cfg : target && target.nodeType ? target : null);\n\n                    this.recenters = recenters || this.recenters;\n                    this.center = center || this.center;\n                    this.round = round || this.round;\n                    return this;\n                }\n\n                _createClass(PaperRipple, [{\n                    key: '_initTarget',\n                    value: function _initTarget() {\n                        var target = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\n                        var _doc = _doc || window.document;\n\n                        if (!this.$) {\n                            this.$ = target || _doc.createElement('div');\n                            this.$.classList.add('paper-ripple');\n                        }\n\n                        if (!this.$background) {\n                            this.$background = target && target.querySelector('.paper-ripple__background') || _doc.createElement('div');\n                            this.$background.classList.add('paper-ripple__background');\n                            this.$.appendChild(this.$background);\n                        }\n\n                        if (!this.$waves) {\n                            this.$waves = target && target.querySelector('.paper-ripple__waves') || _doc.createElement('div');\n                            this.$waves.classList.add('paper-ripple__waves');\n                            this.$.appendChild(this.$waves);\n                        }\n\n                        return this;\n                    }\n                }, {\n                    key: 'addWave',\n                    value: function addWave() {\n                        var wave = new PaperWave(this);\n                        this.$waves.appendChild(wave.$);\n                        this.$background.style.backgroundColor = wave.color;\n\n                        this._waves.push(wave);\n\n                        return wave;\n                    }\n                }, {\n                    key: 'downAction',\n                    value: function downAction(ev) {\n                        var wave = this.addWave();\n                        wave.downAction(ev);\n                        this.animate();\n                        return this;\n                    }\n                }, {\n                    key: 'upAction',\n                    value: function upAction() {\n                        this._waves.forEach(function (wave) {\n                            wave.upAction();\n                        });\n\n                        this.animate();\n                        return this;\n                    }\n                }, {\n                    key: 'removeWave',\n                    value: function removeWave(wave) {\n                        var waveIndex = this._waves.indexOf(wave);\n\n                        if (waveIndex < 0) {\n                            return this;\n                        }\n\n                        this._waves.splice(waveIndex, 1);\n\n                        wave.remove();\n                        return this;\n                    }\n                }, {\n                    key: 'animate',\n                    value: function animate() {\n                        var i = undefined,\n                            l = undefined,\n                            wave = undefined;\n\n                        for (i = 0, l = this._waves.length; i < l; i++) {\n                            wave = this._waves[i];\n\n                            if (wave) {\n                                wave.draw();\n                                this.$background.style.opacity = wave.outerOpacity;\n\n                                if (wave.isWaveFullyOpaque && !wave.isMaxRadiusReached) {\n                                    this.removeWave(wave);\n                                }\n                            }\n                        }\n\n                        if (!this.shouldKeepAnimating && this._waves.length === 0) {\n                            this.$background.style.backgroundColor = null;\n                        } else {\n                            window.requestAnimationFrame(this.animate.bind(this));\n                        }\n\n                        return this;\n                    }\n                }, {\n                    key: 'recenters',\n                    get: function get() {\n                        return this.$.hasAttribute('recenters');\n                    },\n                    set: function set(newValue) {\n                        this.$[newValue ? 'setAttribute' : 'removeAttribute']('recenters', '');\n                    }\n                }, {\n                    key: 'center',\n                    get: function get() {\n                        return this.$.hasAttribute('center');\n                    },\n                    set: function set(newValue) {\n                        this.$[newValue ? 'setAttribute' : 'removeAttribute']('center', '');\n                    }\n                }, {\n                    key: 'round',\n                    get: function get() {\n                        return this.$.classList.contains('paper-ripple--round');\n                    },\n                    set: function set(newValue) {\n                        this.$.classList.toggle('paper-ripple--round', newValue);\n                    }\n                }, {\n                    key: 'shouldKeepAnimating',\n                    get: function get() {\n                        return this._waves.some(function (wave) {\n                            return !wave.isAnimationComplete;\n                        });\n                    }\n                }]);\n\n                return PaperRipple;\n            })();\n\n            module.exports = PaperRipple;\n        }\n    };\n});\n//# sourceMappingURL=PaperRipple.js.map\n"],"sourceRoot":"/source/"}